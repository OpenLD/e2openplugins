diff --git a/plugin/plugin.py b/plugin/plugin.py
index 620fbda..49dfb05 100644
--- a/plugin/plugin.py
+++ b/plugin/plugin.py
@@ -7,7 +7,6 @@ from Plugins.Plugin import PluginDescriptor
 # Configuration
 from Components.config import *
 config.plugins.foreca = ConfigSubsection()
-config.plugins.foreca.extmenu = ConfigEnableDisable(default=True)
 
 def main(session, **kwargs):
 	global PICON_PATH
@@ -18,15 +17,19 @@ def main(session, **kwargs):
 def Plugins(path, **kwargs):
 	global PICON_PATH
 	PICON_PATH = path + "/picon/"
-	list = [PluginDescriptor(name=_("Foreca Weather Forecast"),
+	return [
+		PluginDescriptor(
+			where=PluginDescriptor.WHERE_PLUGINMENU,
+			name=_("Foreca Weather Forecast"),
+			description=_("Weather forecast for the upcoming 10 days"),
+			fnc=main,
+			icon = "foreca_logo.png",
+			needsRestart=False,
+		),
+		PluginDescriptor(
+		name=_("Foreca Weather Forecast"),
 		description=_("Weather forecast for the upcoming 10 days"),
-		icon="foreca_logo.png",
-		where=PluginDescriptor.WHERE_PLUGINMENU,
-		fnc=main)]
-	if config.plugins.foreca.extmenu.value:
-		list.append(PluginDescriptor(name=_("Foreca Weather Forecast"),
-		description=_("Weather forecast for the upcoming 10 days"),
-		icon="foreca_logo.png",
-		where=PluginDescriptor.WHERE_EXTENSIONSMENU,
-		fnc=main))
-	return list
+		where=PluginDescriptor.WHERE_EXTENSIONSMENU, 
+		fnc=main
+		),
+	]
diff --git a/plugin/ui.py b/plugin/ui.py
index fc162dd..322babc 100644
--- a/plugin/ui.py
+++ b/plugin/ui.py
@@ -11,9 +11,9 @@
 #
 #        We wish all users wonderful weather!
 #
-VERSION = "3.1.6" 
+VERSION = "3.1.6-r1" 
 #
-#                    17.09.2015
+#                    13.06.2016
 #
 #     Source of information: http://www.foreca.com
 #
@@ -85,10 +85,10 @@ VERSION = "3.1.6"
 #	  actual load postponed until the user requests for it.
 #	Finnish localization added. Thanks to kjuntara
 #	Ukrainian localization added. Thanks to Irkoff
-# 3.1.1 ForecaPreview skineable
-# 3.1.2 Next screens skineable
-# 3.1.3 Added font size for slideshow into setting
-# 3.1.4 rem /www.metoffice.gov.uk due non existing infrared on this pages more
+# 3.1.0-r1 small DreamOS eTimer changes by gutemine
+# 3.1.1 delete backcolor list and skin fixes 
+# 3.1.2-r1 foreca.com new url
+# 3.1.7 fix celsius and fahrenheit indicator by snoozer
 
 # Unresolved: Crash when scrolling in help screen of city panel
 #
@@ -118,8 +118,6 @@ from Components.MultiContent import MultiContentEntryText, MultiContentEntryPixm
 from Components.Pixmap import Pixmap
 from Components.PluginComponent import plugins
 from Components.Console import Console
-from Components.GUIComponent import GUIComponent
-from skin import parseFont, parseColor
 
 # Configuration
 from Components.config import *
@@ -129,7 +127,7 @@ from Components.ConfigList import ConfigList, ConfigListScreen
 import os
 
 # Enigma
-from enigma import eListboxPythonMultiContent, ePicLoad, eServiceReference, eTimer, getDesktop, gFont, RT_HALIGN_RIGHT, RT_HALIGN_LEFT, BT_SCALE , BT_KEEP_ASPECT_RATIO, RT_VALIGN_CENTER
+from enigma import eListboxPythonMultiContent, ePicLoad, eServiceReference, eTimer, getDesktop, gFont, RT_HALIGN_RIGHT, RT_HALIGN_LEFT
 
 # Plugin definition
 from Plugins.Plugin import PluginDescriptor
@@ -161,11 +159,11 @@ import locale
 pluginPrintname = "[Foreca Ver. %s]" %VERSION
 ###############################################################################
 
+config.plugins.foreca = ConfigSubsection()
 config.plugins.foreca.resize = ConfigSelection(default="0", choices = [("0", _("simple")), ("1", _("better"))])
 config.plugins.foreca.bgcolor = ConfigSelection(default="#00000000", choices = [("#00000000", _("black")),("#009eb9ff", _("blue")),("#00ff5a51", _("red")), ("#00ffe875", _("yellow")), ("#0038FF48", _("green"))])
 config.plugins.foreca.textcolor = ConfigSelection(default="#0038FF48", choices = [("#00000000", _("black")),("#009eb9ff", _("blue")),("#00ff5a51", _("red")), ("#00ffe875", _("yellow")), ("#0038FF48", _("green"))])
 config.plugins.foreca.framesize = ConfigInteger(default=5, limits=(5, 99))
-config.plugins.foreca.fontsize = ConfigInteger(default=20, limits=(20, 30))
 config.plugins.foreca.slidetime = ConfigInteger(default=1, limits=(1, 60))
 config.plugins.foreca.infoline = ConfigYesNo(default=True)
 config.plugins.foreca.loop = ConfigYesNo(default=False)
@@ -201,10 +199,10 @@ if os.path.exists(USR_PATH) is False:
 # Get screen size
 size_w = getDesktop(0).size().width()
 size_h = getDesktop(0).size().height()
-
-HD = True
 if size_w < 1280:
 	HD = False
+else:
+	HD = True
 
 # Get diacritics to handle
 FILTERin = []
@@ -241,28 +239,10 @@ class MainMenuList(MenuList):
 
 	def __init__(self):
 		MenuList.__init__(self, [], False, eListboxPythonMultiContent)
-		GUIComponent.__init__(self)
-
-		#default values:
-		self.font0 = gFont("Regular",20)
-		self.font1 = gFont("Regular",24)
-		self.font2 = gFont("Regular",18)
-		self.font3 = gFont("Regular",22)
-		self.itemHeight = 90
-		self.valTime = 10,34,60,24
-		self.valPict = 70,10,70,70
-		self.valPictScale = 0
-		self.valTemp = 145,15,80,24
-		self.valTempUnits = 145,45,80,24
-		self.valWindPict = 230,36,28,28
-		self.valWindPictScale = 0
-		self.valWind = 265,15,95,24
-		self.valWindUnits = 265,45,95,24
-		self.valText1 = 365,5,600,28
-		self.valText2 = 365,33,600,28
-		self.valText3 = 365,59,600,28
-		###
-
+		self.l.setFont(0, gFont("Regular", 20))
+		self.l.setFont(1, gFont("Regular", 24))
+		self.l.setFont(2, gFont("Regular", 18))
+		self.l.setFont(3, gFont("Regular", 22))
 		self.listCompleted = []
 		self.callback = None
 		self.idx = 0
@@ -270,88 +250,8 @@ class MainMenuList(MenuList):
 		self.pos = 20
 		print pluginPrintname, "MainMenuList..."
 
-#--------------------------- get skin attribs ---------------------------------------------
-	def applySkin(self, desktop, parent):
-		def warningWrongSkinParameter(string, wanted, given):
-			print "[ForecaPreview] wrong '%s' skin parameters. Must be %d arguments (%d given)" % (string, wanted, given)
-		def font0(value):
-			self.font0 = parseFont(value, ((1,1),(1,1)))
-		def font1(value):
-			self.font1 = parseFont(value, ((1,1),(1,1)))
-		def font2(value):
-			self.font2 = parseFont(value, ((1,1),(1,1)))
-		def font3(value):
-			self.font3 = parseFont(value, ((1,1),(1,1)))
-		def itemHeight(value):
-			self.itemHeight = int(value)
-		def setTime(value):
-			self.valTime = map(int, value.split(","))
-			l = len(self.valTime)
-			if l != 4:
-				warningWrongSkinParameter(attrib,4, l)
-		def setPict(value):
-			self.valPict = map(int, value.split(","))
-			l = len(self.valPict)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def setPictScale(value):
-			self.valPictScale = int(value)
-		def setTemp(value):
-			self.valTemp = map(int, value.split(","))
-			l = len(self.valTemp)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def setTempUnits(value):
-			self.valTempUnits = map(int, value.split(","))
-			l = len(self.valTempUnits)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def setWindPict(value):
-			self.valWindPict = map(int, value.split(","))
-			l = len(self.valWindPict)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def setWindPictScale(value):
-			self.valWindPictScale = int(value)
-		def setWind(value):
-			self.valWind = map(int, value.split(","))
-			l = len(self.valWind)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, )
-		def setWindUnits(value):
-			self.valWindUnits = map(int, value.split(","))
-			l = len(self.valWindUnits)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def text1Pos(value):
-			self.valText1 = map(int, value.split(","))
-			l = len(self.valText1)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def text2Pos(value):
-			self.valText2 = map(int, value.split(","))
-			l = len(self.valText2)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		def text3Pos(value):
-			self.valText3 = map(int, value.split(","))
-			l = len(self.valText3)
-			if l != 4:
-				warningWrongSkinParameter(attrib,4, l)
-		for (attrib, value) in list(self.skinAttributes):
-			try:
-				locals().get(attrib)(value)
-				self.skinAttributes.remove((attrib, value))
-			except:
-				pass
-		self.l.setFont(0, self.font0)
-		self.l.setFont(1, self.font1)
-		self.l.setFont(2, self.font2)
-		self.l.setFont(3, self.font3)
-		self.l.setItemHeight(self.itemHeight)
-		return GUIComponent.applySkin(self, desktop, parent)
-
 #--------------------------- Go through all list entries ----------------------------------
+
 	def buildEntries(self):
 		#if DEBUG: print pluginPrintname, "buildEntries:", len(self.list)
 		if self.idx == len(self.list):
@@ -421,46 +321,32 @@ class MainMenuList(MenuList):
 			self.tempcolor = violet
 
 		# Time
-		x, y, w, h = self.valTime
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=0, text=self.x[1], color=weiss, color_sel=weiss))
+		self.res.append(MultiContentEntryText(pos=(10, 34), size=(60, 24), font=0, text=self.x[1], color=weiss, color_sel=weiss))
 
 		# forecast pictogram
 		pngpic = LoadPixmap(self.thumb)
 		if pngpic is not None:
-			x, y, w, h = self.valPict
-			flags = 0
-			if self.valPictScale:
-				flags = BT_SCALE | BT_KEEP_ASPECT_RATIO
-			self.res.append(MultiContentEntryPixmapAlphaTest(pos=(x, y), size=(w, h), png=pngpic, flags = flags ))
+			self.res.append(MultiContentEntryPixmapAlphaTest(pos=(70, 10), size=(70, 70), png=pngpic))
 
 		# Temp
-		x, y, w, h = self.valTemp
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=0, text=_("Temp"), color=weiss, color_sel=weiss))
-		x, y, w, h = self.valTempUnits
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=3, text=self.x[2] + tempUnit, color=self.tempcolor, color_sel=self.tempcolor))
+		self.res.append(MultiContentEntryText(pos=(145, 15), size=(80, 24), font=0, text=_("Temp"), color=weiss, color_sel=weiss))
+		self.res.append(MultiContentEntryText(pos=(145, 45), size=(80, 24), font=3, text=self.x[2] + tempUnit, color=self.tempcolor, color_sel=self.tempcolor))
 
 		# wind pictogram
 		pngpic = LoadPixmap(self.wind + ".png")
 		if pngpic is not None:
-			x, y, w, h = self.valWindPict
-			flags = 0
-			if self.valWindPictScale:
-				flags = BT_SCALE | BT_KEEP_ASPECT_RATIO
-			self.res.append(MultiContentEntryPixmapAlphaTest(pos=(x, y), size=(w, h), png=pngpic, flags = flags))
+			self.res.append(MultiContentEntryPixmapAlphaTest(pos=(230, 36), size=(28, 28), png=pngpic))
 
 		# Wind
-		x, y, w, h = self.valWind
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=0, text=_("Wind"), color=weiss, color_sel=weiss))
-		x, y, w, h = self.valWindUnits
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=3, text=self.x[4], color=violetred, color_sel=violetred))
+		self.res.append(MultiContentEntryText(pos=(265, 15), size=(95, 24), font=0, text=_("Wind"), color=weiss, color_sel=weiss))
+		self.res.append(MultiContentEntryText(pos=(265, 45), size=(95, 24), font=3, text=self.x[4], color=violetred, color_sel=violetred))
 		
 		# Text
-		x, y, w, h = self.valText1
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=3, text=self.x[5], color=weiss, color_sel=weiss))
-		x, y, w, h = self.valText2
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=2, text=self.x[6], color=mblau, color_sel=mblau))
-		x, y, w, h = self.valText3
-		self.res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=2, text=self.x[7], color=mblau, color_sel=mblau))
+		self.res.append(MultiContentEntryText(pos=(365, 5), size=(600, 28), font=3, text=self.x[5], color=weiss, color_sel=weiss))
+		textsechs=self.x[6]
+		textsechs=textsechs.replace("&deg;", "") + tempUnit
+		self.res.append(MultiContentEntryText(pos=(365, 33), size=(600, 24), font=2, text=textsechs, color=mblau, color_sel=mblau))
+		self.res.append(MultiContentEntryText(pos=(365, 59), size=(600, 24), font=2, text=self.x[7], color=mblau, color_sel=mblau))
 
 		self.listCompleted.append(self.res)
 		self.idx += 1
@@ -471,7 +357,7 @@ class MainMenuList(MenuList):
 	def SetList(self, l):
 		if DEBUG: print pluginPrintname, "SetList"
 		self.list = l
-		#self.l.setItemHeight(90)
+		self.l.setItemHeight(90)
 		del self.listCompleted
 		self.listCompleted = []
 		self.idx = 0
@@ -485,8 +371,8 @@ class ForecaPreviewCache(Screen):
 
 	skin = """
 		<screen position="center,center" size="76,76" flags="wfNoBorder" backgroundColor="#000000" >
-			<eLabel position="2,2" zPosition="1" size="72,72" font="Regular;18" backgroundColor="#40000000" />
-			<widget name="spinner" position="14,14" zPosition="4" size="48,48" alphatest="on" />
+			<eLabel position="2,2" zPosition="10" size="72,72" font="Regular;18" backgroundColor="#40000000" />
+			<widget name="spinner" position="14,14" zPosition="11" size="48,48" alphatest="on" />
 		</screen>"""
 
 	def __init__(self, session):
@@ -497,7 +383,10 @@ class ForecaPreviewCache(Screen):
 		self.curr = 0
 		
 		self.timer = eTimer()
-		self.timer.callback.append(self.showNextSpinner)
+		if os.path.exists("/var/lib/dpkg/status"):
+			self.timer_conn = self.timer.timeout.connect(self.showNextSpinner)
+		else:
+			self.timer.callback.append(self.showNextSpinner)
 
 	def start(self):
 		self.show()
@@ -569,46 +458,46 @@ class ForecaPreview(Screen, HelpableScreen):
 		
 		if HD:
 			self.skin = """
-				<screen name="ForecaPreview" position="center,center" size="980,505" title="Foreca Weather Forecast" backgroundColor="#40000000" >
-					<widget name="MainList" position="0,90" size="980,365" zPosition="3" backgroundColor="#40000000" enableWrapAround="1" scrollbarMode="showOnDemand" />
-					<widget source="Titel" render="Label" position="4,10" zPosition="3" size="978,60" font="Regular;24" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
-					<widget source="Titel2" render="Label" position="35,15" zPosition="2" size="900,60" font="Regular;26" valign="center" halign="center" transparent="1" foregroundColor="#f47d19"/>
-					<eLabel position="5,70" zPosition="2" size="970,2" foregroundColor="#c3c3c9" backgroundColor="#FFFFFF" />
-					<eLabel position="5,460" zPosition="2" size="970,2" foregroundColor="#c3c3c9" backgroundColor="#FFFFFF" />
-					<widget source="key_red" render="Label" position="39,463" zPosition="2" size="102,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_green" render="Label" position="177,463" zPosition="2" size="110,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_yellow" render="Label" position="325,463" zPosition="2" size="110,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_blue" render="Label" position="473,463" zPosition="2" size="110,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_ok" render="Label" position="621,463" zPosition="2" size="70,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_menu" render="Label" position="729,463" zPosition="2" size="85,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_info" render="Label" position="852,463" zPosition="2" size="85,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<ePixmap position="2,470" size="36,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
-					<ePixmap position="140,470" size="36,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
-					<ePixmap position="288,470" size="36,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
-					<ePixmap position="436,470" size="36,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
-					<ePixmap position="584,470" size="36,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_ok.png" transparent="1" alphatest="on" />
-					<ePixmap position="692,470" size="36,25" pixmap="skin_default/buttons/key_menu.png" transparent="1" alphatest="on" />
-					<ePixmap position="815,470" size="36,25" pixmap="skin_default/buttons/key_info.png" transparent="1" alphatest="on" />
-					<ePixmap position="938,470" size="36,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_help.png" transparent="1" alphatest="on" />
+				<screen name="ForecaPreview" position="center,center" size="990,515" title="Foreca Weather Forecast" >
+					<widget name="MainList" position="5,55" size="980,360" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
+					<widget source="Titel" render="Label" position="5,0" zPosition="3" size="980,50" font="Regular;24" valign="center" halign="left" transparent="1" />
+					<widget source="Titel2" render="Label" position="5,0" zPosition="2" size="980,50" font="Regular;24" valign="center" halign="center" transparent="1" foregroundColor="#f47d19"/>
+					<eLabel position="5,50" zPosition="4" size="980,1" backgroundColor="#ffffff" />
+					<eLabel position="5,420" zPosition="4" size="980,1" backgroundColor="#ffffff" />
+					<widget source="key_red" render="Label" position="45,430" zPosition="2" size="200,50" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<widget source="key_green" render="Label" position="290,430" zPosition="2" size="200,50" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<widget source="key_yellow" render="Label" position="535,430" zPosition="2" size="200,50" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<widget source="key_blue" render="Label" position="780,430" zPosition="2" size="200,50" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<widget source="key_info" render="Label" position="290,485" zPosition="2" size="200,25" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<widget source="key_menu" render="Label" position="535,485" zPosition="2" size="200,25" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />					
+					<widget source="key_ok" render="Label" position="780,485" zPosition="2" size="200,25" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<ePixmap position="5,443" size="35,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
+					<ePixmap position="250,443" size="35,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
+					<ePixmap position="495,443" size="35,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
+					<ePixmap position="740,443" size="35,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
+					<ePixmap position="5,485" size="35,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_help.png" transparent="1" alphatest="on" />
+					<ePixmap position="250,485" size="35,25" pixmap="skin_default/buttons/key_info.png" transparent="1" alphatest="on" />					
+					<ePixmap position="495,485" size="35,25" pixmap="skin_default/buttons/key_menu.png" transparent="1" alphatest="on" />
+					<ePixmap position="740,485" size="35,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_ok.png" transparent="1" alphatest="on" />
 				</screen>"""
 		else:
 			self.skin = """
-				<screen name="ForecaPreview" position="center,65" size="720,480" title="Foreca Weather Forecast" backgroundColor="#40000000" >
-					<widget name="MainList" position="0,65" size="720,363" zPosition="3" backgroundColor="#40000000" enableWrapAround="1" scrollbarMode="showOnDemand" />
-					<widget source="Titel" render="Label" position="20,3" zPosition="3" size="680,50" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
-					<widget source="Titel2" render="Label" position="40,5" zPosition="2" size="640,50" font="Regular;22" valign="center" halign="center" transparent="1" foregroundColor="#f47d19"/>
-					<eLabel position="5,55" zPosition="2" size="710,2" foregroundColor="#c3c3c9" backgroundColor="#FFFFFF" />
-					<eLabel position="5,437" zPosition="2" size="710,2" foregroundColor="#c3c3c9" backgroundColor="#FFFFFF" />
-					<widget source="key_red" render="Label" position="50,438" zPosition="2" size="120,40" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
-					<widget source="key_green" render="Label" position="210,438" zPosition="2" size="100,40" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
-					<widget source="key_yellow" render="Label" position="350,438" zPosition="2" size="100,40" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
-					<widget source="key_blue" render="Label" position="490,438" zPosition="2" size="100,40" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
-					<widget source="key_ok" render="Label" position="630,438" zPosition="2" size="100,40" font="Regular;20" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
-					<ePixmap position="10,442" size="36,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
-					<ePixmap position="170,442" size="36,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
-					<ePixmap position="310,442" size="36,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
-					<ePixmap position="450,442" size="36,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
-					<ePixmap position="590,442" size="36,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_ok.png" transparent="1" alphatest="on" />
+				<screen name="ForecaPreview" position="center,65" size="720,470" title="Foreca Weather Forecast" >
+					<widget name="MainList" position="5,55" size="710,360" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
+					<widget source="Titel" render="Label" position="5,0" zPosition="3" size="710,50" font="Regular;22" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
+					<widget source="Titel2" render="Label" position="5,0" zPosition="2" size="710,50" font="Regular;22" valign="center" halign="center" transparent="1" foregroundColor="#f47d19"/>
+					<eLabel position="5,50" zPosition="4" size="710,1" backgroundColor="#ffffff" />
+					<eLabel position="5,420" zPosition="4" size="710,1" backgroundColor="#ffffff" />
+					<widget source="key_red" render="Label" position="45,425" zPosition="2" size="105,45" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" />
+					<widget source="key_green" render="Label" position="195,425" zPosition="2" size="105,45" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
+					<widget source="key_yellow" render="Label" position="345,425" zPosition="2" size="105,45" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
+					<widget source="key_blue" render="Label" position="495,425" zPosition="2" size="105,45" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
+					<widget source="key_ok" render="Label" position="645,425" zPosition="2" size="90,45" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff"/>
+					<ePixmap position="5,435" size="35,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
+					<ePixmap position="155,435" size="35,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
+					<ePixmap position="305,435" size="35,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
+					<ePixmap position="455,435" size="35,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
+					<ePixmap position="605,435" size="35,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_ok.png" transparent="1" alphatest="on" />
 				</screen>"""
 
 		Screen.__init__(self, session)
@@ -1030,41 +919,10 @@ class ForecaPreview(Screen, HelpableScreen):
 class CityPanelList(MenuList):
 	def __init__(self, list, font0 = 22, font1 = 16, itemHeight = 30, enableWrapAround = True):
 		MenuList.__init__(self, [], False, eListboxPythonMultiContent)
-		GUIComponent.__init__(self)
-		self.font0 = gFont("Regular",font0)
-		self.font1 = gFont("Regular",font1)
-		self.itemHeight = itemHeight
-		self.foregroundColorSelected = 8900346
-		self.foregroundColor = 0xffffff
-		self.backgroundColorSelected = 0x565656
-		self.column = 30
-
-#--------------------------- get skin attribs ---------------------------------------------
-	def applySkin(self, desktop, parent):
-		def font(value):
-			self.font0 = parseFont(value, ((1,1),(1,1)))
-		def font1(value):
-			self.font1 = parseFont(value, ((1,1),(1,1)))
-		def itemHeight(value):
-			self.itemHeight = int(value)
-		def foregroundColor(value):
-			self.foregroundColor = parseColor(value).argb()
-		def foregroundColorSelected(value):
-			self.foregroundColorSelected = parseColor(value).argb()
-		def backgroundColorSelected(value):
-			self.backgroundColorSelected = parseColor(value).argb()
-		def column(value):
-			self.column = int(value)
-		for (attrib, value) in list(self.skinAttributes):
-			try:
-				locals().get(attrib)(value)
-				self.skinAttributes.remove((attrib, value))
-			except:
-				pass
-		self.l.setFont(0, self.font0)
-		self.l.setFont(1, self.font1)
-		self.l.setItemHeight(self.itemHeight)
-		return GUIComponent.applySkin(self, desktop, parent)
+		self.l.setFont(0, gFont("Regular", font0))
+		self.l.setFont(1, gFont("Regular", font1))
+		self.l.setItemHeight(itemHeight)
+
 # -------------------------------------------------------------------
 
 class CityPanel(Screen, HelpableScreen):
@@ -1072,8 +930,8 @@ class CityPanel(Screen, HelpableScreen):
 	def __init__(self, session, panelmenu):
 		self.session = session
 		self.skin = """
-			<screen name="CityPanel" position="center,60" size="660,500" title="Select a city" backgroundColor="#40000000" >
-				<widget name="Mlist" position="10,10" size="640,450" zPosition="3" backgroundColor="#40000000" backgroundColorSelected="#565656" enableWrapAround="1" scrollbarMode="showOnDemand" />
+			<screen name="CityPanel" position="center,60" size="660,500" title="Select a city" >
+				<widget name="Mlist" position="10,10" size="640,450" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
 				<eLabel position="0,465" zPosition="2" size="676,2" foregroundColor="#c3c3c9" backgroundColor="#c1cdc1" />
 				<widget source="key_green" render="Label" position="50,470" zPosition="2" size="100,30" font="Regular;20" valign="center" halign="left" transparent="1" />
 				<widget source="key_yellow" render="Label" position="200,470" zPosition="2" size="100,30" font="Regular;20" valign="center" halign="left" transparent="1" />
@@ -1081,17 +939,28 @@ class CityPanel(Screen, HelpableScreen):
 				<widget source="key_ok" render="Label" position="500,470" zPosition="2" size="120,30" font="Regular;20" valign="center" halign="left" transparent="1" />
 				<ePixmap position="10,473" size="36,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
 				<ePixmap position="160,473" size="36,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
-				<ePixmap position="310,473" size="36,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
-				<ePixmap position="460,473" size="36,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_ok.png" transparent="1" alphatest="on" />
-				<ePixmap position="624,473" size="36,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_help.png" transparent="1" alphatest="on" />
+				<ePixmap position="310,473" size="35,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
+				<ePixmap position="460,473" size="35,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_ok.png" transparent="1" alphatest="on" />
+				<ePixmap position="624,473" size="35,25" pixmap="/usr/lib/enigma2/python/Plugins/Extensions/Foreca/buttons/key_help.png" transparent="1" alphatest="on" />
 			</screen>"""
 
 		Screen.__init__(self, session)
 		self.setup_title = _("Select a city")
 		self.Mlist = []
-		self["Mlist"] = CityPanelList([])
+
+		self.maxidx = 0
+		if fileExists(USR_PATH + "/City.cfg"):
+			file = open(USR_PATH + "/City.cfg", "r")
+			for line in file:
+				text = line.strip()
+				self.maxidx += 1
+				self.Mlist.append(self.CityEntryItem((string.replace(text, "_", " "), text)))
+			file.close
 
 		self.onChangedEntry = []
+		self["Mlist"] = CityPanelList([])
+		self["Mlist"].l.setList(self.Mlist)
+		self["Mlist"].selectionEnabled(1)
 
 		self["key_green"] = StaticText(_("Favorite 1"))
 		self["key_yellow"] = StaticText(_("Favorite 2"))
@@ -1117,20 +986,6 @@ class CityPanel(Screen, HelpableScreen):
 				"volumeUp": (self.jump100_down, _("Volume+ - 100 back"))
 			}, -2)
 
-		self.onShown.append(self.prepare)
-
-	def prepare(self):
-		self.maxidx = 0
-		if fileExists(USR_PATH + "/City.cfg"):
-			file = open(USR_PATH + "/City.cfg", "r")
-			for line in file:
-				text = line.strip()
-				self.maxidx += 1
-				self.Mlist.append(self.CityEntryItem((string.replace(text, "_", " "), text)))
-			file.close
-		self["Mlist"].l.setList(self.Mlist)
-		self["Mlist"].selectionEnabled(1)
-
 	def jump500_up(self):
 		cur = self["Mlist"].l.getCurrentSelectionIndex()
 		if (cur + 500) <= self.maxidx:
@@ -1218,17 +1073,9 @@ class CityPanel(Screen, HelpableScreen):
 		self.session.open( MessageBox, message, MessageBox.TYPE_INFO, timeout=8)
 
 	def CityEntryItem(self,entry):
-		mblau = self["Mlist"].foregroundColorSelected
-		weiss = self["Mlist"].foregroundColor
-		grau = self["Mlist"].backgroundColorSelected
 
-		itemHeight = self["Mlist"].itemHeight
-
-		col = self["Mlist"].column
-		
 		res = [entry]
-		res.append(MultiContentEntryText(pos=(0, 0), size=(col, itemHeight), font=0, text="", color=weiss, color_sel=mblau, backcolor_sel=grau, flags=RT_VALIGN_CENTER))
-		res.append(MultiContentEntryText(pos=(col, 0), size=(1000, itemHeight), font=0, text=entry[0], color=weiss, color_sel=mblau, backcolor_sel=grau, flags=RT_VALIGN_CENTER))
+		res.append(MultiContentEntryText(pos=(10, 2), size=(600, 28), font=0, text=entry[0], ))
 		return res
 
 #------------------------------------------------------------------------------------------
@@ -1238,54 +1085,15 @@ class CityPanel(Screen, HelpableScreen):
 class SatPanelList(MenuList):
 
 	if HD:
-		ItemSkin = 143
+		ItemSkin = 150
 	else:
-		ItemSkin = 123
+		ItemSkin = 130
 
-	def __init__(self, list, font0 = 28, font1 = 16, itemHeight = ItemSkin, enableWrapAround = True):
+	def __init__(self, list, font0 = 28, font1 = 18, itemHeight = ItemSkin, enableWrapAround = True):
 		MenuList.__init__(self, [], False, eListboxPythonMultiContent)
-		GUIComponent.__init__(self)
-		self.font0 = gFont("Regular",font0)
-		self.font1 = gFont("Regular",font1)
-		self.itemHeight = itemHeight
-		self.pictScale = 0
-		self.foregroundColorSelected = 8900346
-		self.foregroundColor = 0xffffff
-		self.backgroundColorSelected = 0x565656
-		self.textPos = 230, 45, 380, 50
-
-	def applySkin(self, desktop, parent):
-		def warningWrongSkinParameter(string, wanted, given):
-			print "[ForecaPreview] wrong '%s' skin parameters. Must be %d arguments (%d given)" % (string, wanted, given)
-		def font(value):
-			self.font0 = parseFont(value, ((1,1),(1,1)))
-		def font1(value):
-			self.font1 = parseFont(value, ((1,1),(1,1)))
-		def itemHeight(value):
-			self.itemHeight = int(value)
-		def setPictScale(value):
-			self.pictScale = int(value)
-		def foregroundColor(value):
-			self.foregroundColor = parseColor(value).argb()
-		def foregroundColorSelected(value):
-			self.foregroundColorSelected = parseColor(value).argb()
-		def backgroundColorSelected(value):
-			self.backgroundColorSelected = parseColor(value).argb()
-		def textPos(value):
-			self.textPos = map(int, value.split(","))
-			l = len(self.self.textPos)
-			if l != 4:
-				warningWrongSkinParameter(attrib, 4, l)
-		for (attrib, value) in list(self.skinAttributes):
-			try:
-				locals().get(attrib)(value)
-				self.skinAttributes.remove((attrib, value))
-			except:
-				pass
-		self.l.setFont(0, self.font0)
-		self.l.setFont(1, self.font1)
-		self.l.setItemHeight(self.itemHeight)
-		return GUIComponent.applySkin(self, desktop, parent)
+		self.l.setFont(0, gFont("Regular", font0))
+		self.l.setFont(1, gFont("Regular", font1))
+		self.l.setItemHeight(itemHeight)
 
 # -----------------------------------------------------------------------------------------
 
@@ -1297,39 +1105,48 @@ class SatPanel(Screen, HelpableScreen):
 
 		if HD:
 			self.skin = """
-				<screen name="SatPanel" position="center,center" size="630,500" title="Satellite photos" backgroundColor="#40000000" >
-					<widget name="Mlist" position="10,10" size="600,430" zPosition="3" backgroundColor="#40000000"  backgroundColorSelected="#565656" enableWrapAround="1" scrollbarMode="showOnDemand" />
-					<eLabel position="0,445" zPosition="2" size="630,1" backgroundColor="#c1cdc1" />
-					<widget source="key_red" render="Label" position="40,450" zPosition="2" size="124,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<widget source="key_green" render="Label" position="198,450" zPosition="2" size="140,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<widget source="key_yellow" render="Label" position="338,450" zPosition="2" size="140,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<widget source="key_blue" render="Label" position="498,450" zPosition="2" size="142,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<ePixmap position="2,460" size="36,20" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
-					<ePixmap position="160,460" size="36,20" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
-					<ePixmap position="300,460" size="36,20" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
-					<ePixmap position="460,460" size="36,20" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
+				<screen name="SatPanel" position="center,center" size="720,530" title="Satellite photos" >
+					<widget name="Mlist" position="10,10" size="700,450" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
+					<eLabel position="10,480" zPosition="2" size="700,1" backgroundColor="#c1cdc1" />
+					<widget source="key_red" render="Label" position="50,480" zPosition="2" size="135,50" font="Regular;20" valign="center" halign="left" transparent="1" />
+					<widget source="key_green" render="Label" position="225,480" zPosition="2" size="135,50" font="Regular;20" valign="center" halign="left" transparent="1" />
+					<widget source="key_yellow" render="Label" position="400,480" zPosition="2" size="135,50" font="Regular;20" valign="center" halign="left" transparent="1" />
+					<widget source="key_blue" render="Label" position="575,480" zPosition="2" size="135,50" font="Regular;20" valign="center" halign="left" transparent="1" />
+					<ePixmap position="10,493" size="35,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
+					<ePixmap position="185,493" size="35,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
+					<ePixmap position="360,493" size="35,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
+					<ePixmap position="535,493" size="35,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
 				</screen>"""
 		else:
 			self.skin = """
-				<screen name="SatPanel" position="center,center" size="630,440" title="Satellite photos" backgroundColor="#40000000" >
-					<widget name="Mlist" position="10,10" size="600,370" zPosition="3" backgroundColor="#40000000"  backgroundColorSelected="#565656" enableWrapAround="1" scrollbarMode="showOnDemand" />
-					<eLabel position="0,385" zPosition="2" size="630,1" backgroundColor="#c1cdc1" />
-					<widget source="key_red" render="Label" position="40,397" zPosition="2" size="124,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<widget source="key_green" render="Label" position="198,397" zPosition="2" size="140,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<widget source="key_yellow" render="Label" position="338,397" zPosition="2" size="140,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<widget source="key_blue" render="Label" position="498,397" zPosition="2" size="142,45" font="Regular;20" valign="center" halign="left" transparent="1" />
-					<ePixmap position="2,400" size="36,20" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
-					<ePixmap position="160,400" size="36,20" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
-					<ePixmap position="300,400" size="36,20" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
-					<ePixmap position="460,400" size="36,20" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
+				<screen name="SatPanel" position="center,center" size="630,440" title="Satellite photos" >
+					<widget name="Mlist" position="5,5" size="620,390" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
+					<eLabel position="5,400" zPosition="2" size="620,1" backgroundColor="#c1cdc1" />
+					<widget source="key_red" render="Label" position="45,400" zPosition="2" size="125,40" font="Regular;18" valign="center" halign="left" transparent="1" />
+					<widget source="key_green" render="Label" position="200,400" zPosition="2" size="125,40" font="Regular;18" valign="center" halign="left" transparent="1" />
+					<widget source="key_yellow" render="Label" position="355,400" zPosition="2" size="125,40" font="Regular;18" valign="center" halign="left" transparent="1" />
+					<widget source="key_blue" render="Label" position="510,400" zPosition="2" size="125,40" font="Regular;18" valign="center" halign="left" transparent="1" />
+					<ePixmap position="5,408" size="35,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" />
+					<ePixmap position="160,408" size="35,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" />
+					<ePixmap position="315,408" size="35,25" pixmap="skin_default/buttons/key_yellow.png" transparent="1" alphatest="on" />
+					<ePixmap position="470,408" size="35,25" pixmap="skin_default/buttons/key_blue.png" transparent="1" alphatest="on" />
 				</screen>"""
 
 		Screen.__init__(self, session)
 		self.setup_title = _("Satellite photos")
-		self["Mlist"] = SatPanelList([])
-
+		self.Mlist = []
+		self.Mlist.append(self.SatEntryItem((_("Weather map Video"), 'sat')))
+		self.Mlist.append(self.SatEntryItem((_("Showerradar Video"), 'rain')))
+		self.Mlist.append(self.SatEntryItem((_("Temperature Video"), 'temp')))
+		self.Mlist.append(self.SatEntryItem((_("Cloudcover Video"), 'cloud')))
+		self.Mlist.append(self.SatEntryItem((_("Air pressure"), 'pressure')))
+		self.Mlist.append(self.SatEntryItem((_("Eumetsat"), 'eumetsat')))
+		self.Mlist.append(self.SatEntryItem((_("Infrared"), 'infrarotmetoffice')))
+                
 		self.onChangedEntry = []
-
+		self["Mlist"] = SatPanelList([])
+		self["Mlist"].l.setList(self.Mlist)
+		self["Mlist"].selectionEnabled(1)
 		self["key_red"] = StaticText(_("Continents"))
 		self["key_green"] = StaticText(_("Europe"))
 		self["key_yellow"] = StaticText(_("Germany"))
@@ -1350,20 +1167,6 @@ class SatPanel(Screen, HelpableScreen):
 				"blue": (self.PicSetupMenu, _("Blue - Settings")),
 				"ok": (self.ok, _("OK - Show")),
 			}, -2)
-		self.onShown.append(self.prepare)
-
-	def prepare(self):
-		self.Mlist = []
-		self.Mlist.append(self.SatEntryItem((_("Weather map Video"), 'sat')))
-		self.Mlist.append(self.SatEntryItem((_("Showerradar Video"), 'rain')))
-		self.Mlist.append(self.SatEntryItem((_("Temperature Video"), 'temp')))
-		self.Mlist.append(self.SatEntryItem((_("Cloudcover Video"), 'cloud')))
-		self.Mlist.append(self.SatEntryItem((_("Air pressure"), 'pressure')))
-		self.Mlist.append(self.SatEntryItem((_("Eumetsat"), 'eumetsat')))
-		#self.Mlist.append(self.SatEntryItem((_("Infrared"), 'infrarotmetoffice')))
-		
-		self["Mlist"].l.setList(self.Mlist)
-		self["Mlist"].selectionEnabled(1)
 
 	def up(self):
 		self["Mlist"].up()
@@ -1461,27 +1264,16 @@ class SatPanel(Screen, HelpableScreen):
 #------------------------------------------------------------------------------------------
 
 	def SatEntryItem(self,entry):
-		flags = 0
-		pict_scale = self["Mlist"].pictScale
-		if pict_scale:
-			flags = BT_SCALE # need stretch to height, due it is missing BT_KEEP_ASPECT_RATIO
-
-		ItemSkin = self["Mlist"].itemHeight
-
-		mblau = self["Mlist"].foregroundColorSelected
-		weiss = self["Mlist"].foregroundColor
-		grau = self["Mlist"].backgroundColorSelected
-
+		if HD:
+			ItemSkin = 150
+		else:
+			ItemSkin = 130
 
 		res = [entry]
 		#if DEBUG: print pluginPrintname, "entry=", entry
 		thumb = LoadPixmap(THUMB_PATH + entry[1] + ".png")
-		thumb_width = 200
-		if pict_scale:
-			thumb_width = thumb.size().width()
-		res.append(MultiContentEntryPixmapAlphaTest(pos=(2, 2), size=(thumb_width, ItemSkin-4), png=thumb, flags=flags))  # png vorn
-		x,y,w,h = self["Mlist"].textPos
-		res.append(MultiContentEntryText(pos=(x, y), size=(w, h), font=0, text=entry[0], color=weiss, color_sel=mblau, backcolor_sel=grau, flags=RT_VALIGN_CENTER))
+		res.append(MultiContentEntryPixmapAlphaTest(pos=(0, 0), size=(200,ItemSkin), png=thumb))  # png vorn
+		res.append(MultiContentEntryText(pos=(220,45), size=(380,50), font=0, text=entry[0], ))
 		return res
 
 	def PicSetupMenu(self):
@@ -1558,33 +1350,15 @@ class SatPanel(Screen, HelpableScreen):
 class SatPanelListb(MenuList):
 
 	if HD:
-		ItemSkin = 143
+		ItemSkin = 150
 	else:
-		ItemSkin = 123
+		ItemSkin = 130
 
-	def __init__(self, list, font0 = 24, font1 = 16, itemHeight = ItemSkin, enableWrapAround = True):
+	def __init__(self, list, font0 = 28, font1 = 18, itemHeight = ItemSkin, enableWrapAround = True):
 		MenuList.__init__(self, [], False, eListboxPythonMultiContent)
-		self.font0 = gFont("Regular",font0)
-		self.font1 = gFont("Regular",font1)
-		self.itemHeight = itemHeight
-
-	def applySkin(self, desktop, parent):
-		def font(value):
-			self.font0 = parseFont(value, ((1,1),(1,1)))
-		def font1(value):
-			self.font1 = parseFont(value, ((1,1),(1,1)))
-		def itemHeight(value):
-			self.itemHeight = int(value)
-		for (attrib, value) in list(self.skinAttributes):
-			try:
-				locals().get(attrib)(value)
-				self.skinAttributes.remove((attrib, value))
-			except:
-				pass
-		self.l.setFont(0, self.font0)
-		self.l.setFont(1, self.font1)
-		self.l.setItemHeight(self.itemHeight)
-		return GUIComponent.applySkin(self, desktop, parent)
+		self.l.setFont(0, gFont("Regular", font0))
+		self.l.setFont(1, gFont("Regular", font1))
+		self.l.setItemHeight(itemHeight)
 
 # -------------------------------------------------------------------
 
@@ -1596,13 +1370,13 @@ class SatPanelb(Screen, HelpableScreen):
 
 		if HD:
 			self.skin = """
-				<screen name="SatPanelb" position="center,center" size="620,500" backgroundColor="#40000000" >
-					<widget name="Mlist" position="10,10" size="600,430" zPosition="3" backgroundColor="#40000000"  backgroundColorSelected="#565656" enableWrapAround="1" scrollbarMode="showOnDemand" />
+				<screen name="SatPanelb" position="center,center" size="620,470" >
+					<widget name="Mlist" position="10,10" size="600,450" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
 				</screen>"""
 		else:
 			self.skin = """
-				<screen name="SatPanelb" position="center,center" size="620,440" backgroundColor="#40000000" >
-					<widget name="Mlist" position="10,10" size="600,370" zPosition="3" backgroundColor="#40000000"  backgroundColorSelected="#565656" enableWrapAround="1" scrollbarMode="showOnDemand" />
+				<screen name="SatPanelb" position="center,center" size="620,410" >
+					<widget name="Mlist" position="10,10" size="600,390" zPosition="3" enableWrapAround="1" scrollbarMode="showOnDemand" />
 				</screen>"""
 
 
@@ -1698,7 +1472,10 @@ class PicView(Screen):
 		self.dirlistcount = 0
 		self.index = 0
 		self.picload = ePicLoad()
-		self.picload.PictureData.get().append(self.finish_decode)
+		if os.path.exists("/var/lib/dpkg/status"):
+			self.picload_conn = self.picload.PictureData.connect(self.finish_decode)
+		else:
+			self.picload.PictureData.get().append(self.finish_decode)
 		self.onLayoutFinish.append(self.setPicloadConf)
 		self.startslide = startslide
 
@@ -1739,7 +1516,6 @@ class View_Slideshow(Screen):
 		self.textcolor = config.plugins.foreca.textcolor.value
 		self.bgcolor = config.plugins.foreca.bgcolor.value
 		space = config.plugins.foreca.framesize.value
-		fontsize = config.plugins.foreca.fontsize.value
 
 		self.skindir = "/tmp"
 		self.skin = "<screen position=\"0,0\" size=\"" + str(size_w) + "," + str(size_h) + "\" flags=\"wfNoBorder\" > \
@@ -1747,7 +1523,7 @@ class View_Slideshow(Screen):
 			<widget name=\"pic\" position=\"" + str(space) + "," + str(space+40) + "\" size=\"" + str(size_w-(space*2)) + "," + str(size_h-(space*2)-40) + "\" zPosition=\"1\" alphatest=\"on\" /> \
 			<widget name=\"point\" position=\""+ str(space+5) + "," + str(space+10) + "\" size=\"20,20\" zPosition=\"2\" pixmap=\"" + THUMB_PATH + "record.png\" alphatest=\"on\" /> \
 			<widget name=\"play_icon\" position=\""+ str(space+25) + "," + str(space+10) + "\" size=\"20,20\" zPosition=\"2\" pixmap=\"" + THUMB_PATH + "ico_mp_play.png\"  alphatest=\"on\" /> \
-			<widget name=\"file\" position=\""+ str(space+45) + "," + str(space+10) + "\" size=\""+ str(size_w-(space*2)-50) + "," + str(fontsize+5) + "\" font=\"Regular;" + str(fontsize) + "\" halign=\"left\" foregroundColor=\"" + self.textcolor + "\" zPosition=\"2\" noWrap=\"1\" transparent=\"1\" /> \
+			<widget name=\"file\" position=\""+ str(space+45) + "," + str(space+10) + "\" size=\""+ str(size_w-(space*2)-50) + ",25\" font=\"Regular;20\" halign=\"left\" foregroundColor=\"" + self.textcolor + "\" zPosition=\"2\" noWrap=\"1\" transparent=\"1\" /> \
 			</screen>"
 		Screen.__init__(self, session)
 
@@ -1784,9 +1560,15 @@ class View_Slideshow(Screen):
 		if self.pindex < 0:
 			self.pindex = 0
 		self.picload = ePicLoad()
-		self.picload.PictureData.get().append(self.finish_decode)
+		if os.path.exists("/var/lib/dpkg/status"):
+			self.picload_conn = self.picload.PictureData.connect(self.finish_decode)
+		else:
+			self.picload.PictureData.get().append(self.finish_decode)
 		self.slideTimer = eTimer()
-		self.slideTimer.callback.append(self.slidePic)
+		if os.path.exists("/var/lib/dpkg/status"):
+			self.slideTimer_conn = self.slideTimer.timeout.connect(self.slidePic)
+		else:
+			self.slideTimer.callback.append(self.slidePic)
 		if self.maxentry >= 0:
 			self.onLayoutFinish.append(self.setPicloadConf)
 		if startslide == True:
@@ -1885,12 +1667,12 @@ class View_Slideshow(Screen):
 class PicSetup(Screen):
 
 	skin = """
-		<screen name="PicSetup" position="center,center" size="660,330" title= "SlideShow Settings" backgroundColor="#000000" >
-			<widget name="Mlist" position="5,5" size="650,280" backgroundColor="#000000" enableWrapAround="1" scrollbarMode="showOnDemand" /> 
-			<widget source="key_red" render="Label" position="50,290" zPosition="2" size="150,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" /> 
-			<widget source="key_green" render="Label" position="285,290" zPosition="2" size="150,40" font="Regular;18" valign="center" halign="left" transparent="1" foregroundColor="#ffffff" /> 
-			<ePixmap position="5,300" size="36,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" /> 
-			<ePixmap position="240,300" size="36,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" /> 
+		<screen name="PicSetup" position="center,center" size="660,330" title= "SlideShow Settings" >
+			<widget name="Mlist" position="5,5" size="650,280" enableWrapAround="1" scrollbarMode="showOnDemand" /> 
+			<widget source="key_red" render="Label" position="50,290" zPosition="2" size="150,40" font="Regular;18" valign="center" halign="left" transparent="1" /> 
+			<widget source="key_green" render="Label" position="285,290" zPosition="2" size="150,40" font="Regular;18" valign="center" halign="left" transparent="1" /> 
+			<ePixmap position="5,300" size="35,25" pixmap="skin_default/buttons/key_red.png" transparent="1" alphatest="on" /> 
+			<ePixmap position="240,300" size="35,25" pixmap="skin_default/buttons/key_green.png" transparent="1" alphatest="on" /> 
 		</screen>"""
 	print pluginPrintname, "Setup..."
 	def __init__(self, session):
@@ -1927,14 +1709,12 @@ class PicSetup(Screen):
 		self.list.append(getConfigListEntry(_("Select time format"), config.plugins.foreca.time))
 		self.list.append(getConfigListEntry(_("City names as labels in the Main screen"), config.plugins.foreca.citylabels))
 		self.list.append(getConfigListEntry(_("Frame size in full view"), config.plugins.foreca.framesize))
-		self.list.append(getConfigListEntry(_("Font size in slideshow"), config.plugins.foreca.fontsize))
 		self.list.append(getConfigListEntry(_("Scaling Mode"), config.plugins.foreca.resize))
 		self.list.append(getConfigListEntry(_("Slide Time (seconds)"), config.plugins.foreca.slidetime))
 		self.list.append(getConfigListEntry(_("Show Infoline"), config.plugins.foreca.infoline))
 		self.list.append(getConfigListEntry(_("Textcolor"), config.plugins.foreca.textcolor))
 		self.list.append(getConfigListEntry(_("Backgroundcolor"), config.plugins.foreca.bgcolor))
 		self.list.append(getConfigListEntry(_("Slide picture in loop"), config.plugins.foreca.loop))
-		self.list.append(getConfigListEntry(_("Display in extensions menu"),config.plugins.foreca.extmenu))
 		self.list.append(getConfigListEntry(_("Debug"), config.plugins.foreca.debug))
 
 	def save(self):
@@ -1945,7 +1725,6 @@ class PicSetup(Screen):
 		DEBUG = config.plugins.foreca.debug.value
 		if DEBUG: print pluginPrintname, "Debug enabled"
 		else: print pluginPrintname, "Debug disabled"
-		self.refreshPlugins()
 		self.close()
 
 	def cancel(self):
@@ -1961,9 +1740,3 @@ class PicSetup(Screen):
 
 	def keyNumber(self, number):
 		self["Mlist"].handleKey(KEY_0 + number)
-
-	def refreshPlugins(self):
-		from Components.PluginComponent import plugins
-		from Tools.Directories import SCOPE_PLUGINS, resolveFilename
-		plugins.clearPluginList()
-		plugins.readPluginList(resolveFilename(SCOPE_PLUGINS))
